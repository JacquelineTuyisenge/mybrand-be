{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "description": "This API serves as the backend for a blog/portfolio application, providing CRUD (Create, Read, Update, Delete) functionalities for managing blogs, handling user authentication (login and register), allowing users to like blogs, create comments, and send queries.",
  
      "title": "My Brand API Documentation."
    },
    "servers": [
      {
        "url": "http://localhost:5000/api/",
        "description": "Local server"
      }
    ],
  
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "To authenticate, include a valid JWT token in the Authorization header using the Bearer scheme. Contact the API administrator to obtain a token."
        }
      },
      "responses": {
        "NotFound": {
          "description": "The specified resource was not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Resource not found"
                  }
                }
              }
            }
          }
        },
        "BadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Bad Request"
                  }
                }
              }
            }
          }
        },
        "UnauthorizedError": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Access token is missing or invalid"
                  }
                }
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "ConflictError": {
          "description": "Resource exists",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Resource exists"
                  }
                }
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Validation error"
                  }
                }
              }
            }
          }
        },
        "ServerError": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "schemas": {
        "UserSignup": {
          "required": ["fullName", "email", "password", "confirmPassword"],
          "type": "object",
          "properties": {
            "fullName": {
              "type": "string",
              "description": "name",
              "example": "KEREN Shallon"
            },
            "email": {
              "type": "string",
              "description": "Email",
              "example": "example@email.com"
            },
  
            "password": {
              "type": "string",
              "description": "Password",
              "example": "Password1234??"
            },
            "confirmPassword": {
                "type": "string",
                "description": "Password",
                "example": "Password1234??"
              }
          }
        },
        "UserLogin": {
          "required": ["email", "password"],
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "your email",
              "example": "admin@email.com"
            },
            "password": {
              "type": "string",
              "description": "your password",
              "example": "password123??"
            }
          }
        },
  
        "Blogs": {
          "required": ["title","author", "content", "imageUrl"],
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "blog title",
              "example": "cyberTrack"
            },
            "author": {
              "type": "string",
              "description": "blog author"
            },
            "content": {
              "type": "content",
              "description": "blog content",
              "example": "This is blog"
            },
            "imageUrl": {
              "type": "file",
              "description": "blog image",
              "example": "car.jpg"
            }
          }
        },
        "updateBlog": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": " blog title",
              "example": "cyberTrack"
            },
            "content": {
              "type": "string",
              "description": "blog content",
              "example": "cyberTrack best car"
            }
          }
        },
        "Comment": {
          "required": ["description"],
          "type": "object",
          "properties": {
            "comment": {
              "type": "string",
              "description": "Comment description",
              "example": "Good blog"
            },
           "author": {
              "type": "string",
              "description": "Comment author",
              "example": "Jacky"
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "Authentication",
        "description": "User Endpoints"
      },
  
      {
        "name": "Blogs",
        "description": "Blog creation, delete, update and display"
      },
      {
        "name": "Comments",
        "description": "Read and create comment on blog"
      },
      { "name": "likes", "description": "like and unlike blog" }
    ],
    "schemes": ["http", "https"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
  
    "paths": {
      "/users/register": {
        "post": {
          "tags": ["Authentication"],
          "summary": "User signup",
          "description": "Creat user account",
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignup"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully!"
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            }
          }
        }
      },
  
      "/users/login/": {
        "post": {
          "tags": ["Authentication"],
          "summary": "User login",
          "description": "User login",
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "You logged in successfully!"
            },
            "404": {
              "$ref": "#/components/responses/Forbidden"
            }
          }
        }
      },
  
      "/blogs/": {
        "post": {
          "tags": ["Blogs"],
          "summary": "Create a new blog post",
          "description": "Create a new blog post",
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "coverImage": { "type": "string", "format": "binary" }
                  },
                  "required": ["title", "description", "coverImage"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Blog created successfully!"
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            }
          }
        }
      },
  
      "/blogs/all/": {
        "get": {
          "tags": ["Blogs"],
          "summary": "Get blogs",
          "description": "Get all blogs",
          "responses": {
            "200": {
              "description": "Success"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
  
      "/blogs/{id}/": {
        "get": {
          "tags": ["Blogs"],
          "summary": "Get get by id",
          "description": "Get blog by id.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": 1
              },
              "description": "blog id"
            }
          ],
          "responses": {
            "200": {
              "description": "blogs retrieved successfully."
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            }
          }
        }
      },
      "/blogs/{Id}": {
        "patch": {
          "tags": ["Blogs"],
          "summary": "Update blog.",
          "description": "Update blog.",
          "parameters": [
            {
              "name": "Id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": 1
              },
              "description": "blog Id"
            }
          ],
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateBlog"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Blog updated successfully."
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{ID}": {
        "delete": {
          "tags": ["Blogs"],
          "summary": "Delete delete.",
          "description": "Delete delete.",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "blog Id"
            }
          ],
          "responses": {
            "200": {
              "description": "Blog deleted successfully."
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{ID}/comments": {
        "get": {
          "tags": ["Comments"],
          "summary": "Blog comments",
          "description": "Get comments list of blog",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": 1
              },
              "description": "Blog id"
            }
          ],
          "responses": {
            "200": {
              "description": "Comments retrieved successfully."
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            }
          }
        }
      },
      "/blogs/{ID}/comments/add": {
        "post": {
          "tags": ["Comments"],
          "summary": "Create comment",
          "description": "Create comment on Blog",
          "parameters": [
            {
              "name": "ID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": 1
              },
              "description": "Blog id"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Comment created successfully!"
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            }
          }
        }
      }
    }
  }